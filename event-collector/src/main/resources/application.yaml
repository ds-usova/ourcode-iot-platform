spring:
  threads:
    virtual:
      enabled: true
  kafka:
    bootstrap-servers: localhost:29092
    admin:
      auto-create: false
    consumer:
      auto-offset-reset: latest
      group-id: event-collector-group
      enable-auto-commit: false
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      backoff-interval: 1000
      backoff-max-attempts: 5
      concurrency: 1
      properties:
        schema.registry.url: http://localhost:8081
        specific.avro.reader: true
        max.poll.interval.ms: 300000
        session.timeout.ms: 10000
        heartbeat.interval.ms: 3000
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      retries: 5
      retry-backoff-ms: 1000
      acks: all
      properties:
        schema.registry.url: http://localhost:8081

  cassandra:
    keyspace-name: iot_schema
    contact-points: localhost
    port: 9042
    schema-action: none
    local-datacenter: datacenter1

app:
  kafka:
    topics:
      events: events
      devices: device-ids